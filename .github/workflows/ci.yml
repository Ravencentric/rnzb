name: Build

on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BEFORE_ALL_LINUX: curl -sSf https://sh.rustup.rs | sh -s -- -y
          CIBW_BEFORE_ALL_WINDOWS: rustup target add i686-pc-windows-msvc
          CIBW_ENVIRONMENT_LINUX: "PATH=$HOME/.cargo/bin:$PATH"
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}/tests -vv"
          MACOSX_DEPLOYMENT_TARGET: "11.0"
          CIBW_ENABLE: "pypy cpython-freethreading"
          CIBW_BUILD_FRONTEND: "build"
          # https://cibuildwheel.pypa.io/en/stable/options/#linux-image
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_28"
          CIBW_MANYLINUX_PYPY_X86_64_IMAGE: "manylinux_2_28"
          CIBW_MANYLINUX_AARCH64_IMAGE: "manylinux_2_28"
          CIBW_MANYLINUX_PPC64LE_IMAGE: "manylinux_2_28"
          CIBW_MANYLINUX_S390X_IMAGE: "manylinux_2_28"
          CIBW_MANYLINUX_PYPY_AARCH64_IMAGE: "manylinux_2_28"
          # PyPA manylinux_2_28 images do not support 32 bit arch
          # PyPA musllinux_1_2 (default) images do not support 32 bit arch
          CIBW_SKIP: "*-manylinux_i686 *-musllinux_i686"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build SDist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz

  publish:
    needs: [build_wheels, build_sdist]
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - uses: pypa/gh-action-pypi-publish@release/v1
